* Leetcode: Intersection of Two Arrays                           :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     hashmap
:END:
---------------------------------------------------------------------
Intersection of Two Arrays
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/intersection-of-two-arrays"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-hashmap][#hashmap]]
---------------------------------------------------------------------
Given two arrays, write a function to compute their intersection.

Example:
#+BEGIN_EXAMPLE
Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2].
#+END_EXAMPLE

Note:
- Each element in the result must be unique.
- The result can be in any order.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/intersection-of-two-arrays][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/intersection-of-two-arrays/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: hashset
#+BEGIN_SRC python
## https://code.dennyzhang.com/intersection-of-two-arrays
## Basic Ideas: set
## Complexity: Time O(n), Space O(n)
class Solution:
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:
        s1 = set(nums1)
        s2 = set()
        for v in nums2:
            if v in s1: s2.add(v)
        return list(s2)
#+END_SRC

#+BEGIN_SRC go
// https://code.dennyzhang.com/intersection-of-two-arrays
// Basic Ideas: hashmap
//
// Complexity: Time O(n+m), Space O(min(m, n))
func intersection(nums1 []int, nums2 []int) []int {
    m := map[int]int{}
    for _, v := range nums1{
        if _, ok := m[v]; !ok {
            m[v] = 1
        }
    }
    res := []int{}
    for _, v := range nums2 {
        if m[v] == 1 {
            // add the result
            res = append(res, v)
            // avoid add duplicates
            m[v] = 0
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
