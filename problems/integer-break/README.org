* Leetcode: Integer Break                                        :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     math, dynamicprogramming, knapsack, intervaldp
:END:
---------------------------------------------------------------------
Integer Break
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/integer-break"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/2-keys-keyboard][2 Keys Keyboard]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-dynamicprogramming][#dynamicprogramming]], [[https://code.dennyzhang.com/review-math][#math]], [[https://code.dennyzhang.com/review-knapsack][#knapsack]], [[https://code.dennyzhang.com/followup-intervaldp][#intervaldp]]
---------------------------------------------------------------------
Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.

#+BEGIN_EXAMPLE
For example, given n = 2, return 1 (2 = 1 + 1); given n = 10, return 36 (10 = 3 + 3 + 4).
#+END_EXAMPLE

Note: You may assume that n is not less than 2 and not larger than 58.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/integer-break][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/integer-break/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC go
// https://code.dennyzhang.com/integer-break
// Basic Ideas: dynamic programming
//
// dp(i)
//    break i as j, k. So i = j+k
// dp(i) = max(
//          max(1, dp(1))*max(i-1, *dp(i-1)),
//          max(2, dp(2))*max(i-2, *dp(i-2)), 
//          max(3, dp(3))*max(i-3, *dp(i-3)), 
//          max(4, dp(4))*max(i-4, *dp(i-4)),
// ...      max(j, dp(j))*max(i-j, *dp(i-j)), (j<=int(i/2))
//
// Complexity: Time O(n^2), Space O(n)
func integerBreak(n int) int {
  if n == 1 { return 0 }
  if n == 2 { return 1 }
  dp := make([]int, n+1)
  dp[0], dp[1], dp[2] = 0, 0, 1
  for i:=3; i<=n; i++ {
    max_product := 0
    for j:=1; j<=int(i/2); j++ {
      v1, v2 := dp[j], dp[i-j]
      if v1<j { v1=j }
      if v2<i-j { v2=i-j }
      if v1*v2>max_product { max_product = v1*v2 }
    }
    dp[i] = max_product
  }
  return dp[n]
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
