* Leetcode: Valid Perfect Square                               :BLOG:Amusing:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     math, binarysearch, sqrt
:END:
---------------------------------------------------------------------
Valid Perfect Square
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/valid-perfect-square"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: #[[https://code.dennyzhang.com/review-math][math]], [[https://code.dennyzhang.com/review-sqrt][#sqrt]]
---------------------------------------------------------------------
Given a positive integer num, write a function which returns True if num is a perfect square else False.

Note: Do not use any built-in library function such as sqrt.
#+BEGIN_EXAMPLE
Example 1:

Input: 16
Returns: True
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:

Input: 14
Returns: False
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/valid-perfect-square][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/valid-perfect-square/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## https://code.dennyzhang.com/valid-perfect-square
## Basic Ideas: binary search
##
##  left: 1, right: n
##
## Complexity: Time O(log(n)), Space O(1)
class Solution:
    def isPerfectSquare(self, num: int) -> bool:
        left, right = 1, num
        # always exists
        while left<right:
            mid = int((right-left)/2+left)
            v = mid*mid
            if v == num: return True
            if num > v:
                # drop the left half
                left = mid+1
            else:
                # drop the right half
                right = mid-1
        return left*left == num
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
