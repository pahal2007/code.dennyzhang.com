* Leetcode: Integer Replacement                                              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     math, inpsiring, pruning, redo
:END:
---------------------------------------------------------------------
Integer Replacement
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/integer-replacement"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-math][#math]], [[https://code.dennyzhang.com/review-inspiring][#inspiring]], [[https://code.dennyzhang.com/tag/pruning][#pruning]]
---------------------------------------------------------------------
Given a positive integer n and you can do operations as follow:

1. If n is even, replace n with n/2.
- If n is odd, you can replace n with either n + 1 or n - 1.

What is the minimum number of replacements needed for n to become 1?

Example 1:
#+BEGIN_EXAMPLE
Input:
8

Output:
3

Explanation:
8 -> 4 -> 2 -> 1
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:

Input:
7

Output:
4

Explanation:
7 -> 8 -> 4 -> 2 -> 1
or
7 -> 6 -> 3 -> 2 -> 1
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/integer-replacement][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/integer-replacement/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution: Iterative
#+BEGIN_SRC python
## Basic Ideas: iterative
## https://code.dennyzhang.com/integer-replacement
##  Change even to odd
##  When odd, whether to caculate f(n+1) or f(n-1)
##
## Complexity: Time O(log(n)), Space O(log(n))
class Solution:
    def integerReplacement(self, n: int) -> int:
        res = 0
        while n>1:
            if n%2 == 0:
                n = int(n/2)
            else:
                if (n+1)%4 == 0 and (n-1) != 2:
                    n += 1
                else:
                    n -= 1
            res += 1
        return res
#+END_SRC

- Solution: Recursive + memo
#+BEGIN_SRC python
## https://code.dennyzhang.com/integer-replacement
## Basic Ideas: recursive + memo
##
##  Change even to odd
##
## Complexity: Time O(log(n)), Space O(log(n))
class Solution:
    def integerReplacement(self, n: int) -> int:
        m = collections.defaultdict(int)
        def dfs(n):
            if n <= 1: return 0
            if n in m: return m[n]
            if n%2 == 0:
                v = 1+dfs(int(n/2))
            else:
                v = 1+min(dfs(n+1), dfs(n-1))
            m[n] = v
            return m[n]
        return dfs(n)
#+END_SRC

- Solution: BFS + pruning
#+BEGIN_SRC go
// https://code.dennyzhang.com/integer-replacement
// Basic Ideas: BFS + pruning
// Complexity: Time O(n), Space O(n)
func integerReplacement(n int) int {
    m := map[int]int{}
    d := 0
    for i:=1; i<=n*2; i=i*2 {
        m[i] = d
        d++
    }
    v, ok := m[n]
    if ok { return v }
    
    queue := []int{n}
    res := 1<<31 - 1
    d = 0
    for len(queue) != 0 {
        l := []int{}
        for _, v := range queue {
            l2 := []int{}
            if v % 2 == 0 {
                l2 = append(l2, v/2)
            } else {
                l2 = append(l2, v+1)
                l2 = append(l2, v-1)
            }
            for _, num := range l2 {
                _, ok := m[num]
                if ok {
                    m[v] = m[num] + 1
                    if res > m[v] + d {
                      res = m[v] + d
                    }
                } else {
                    l = append(l, num)
                }
            }
        }
        queue = l
        d++
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
